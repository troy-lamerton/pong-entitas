//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AccelerateTowardsComponent accelerateTowards { get { return (AccelerateTowardsComponent)GetComponent(GameComponentsLookup.AccelerateTowards); } }
    public bool hasAccelerateTowards { get { return HasComponent(GameComponentsLookup.AccelerateTowards); } }

    public void AddAccelerateTowards(string newTargetTag, float newActiveRange) {
        var index = GameComponentsLookup.AccelerateTowards;
        var component = CreateComponent<AccelerateTowardsComponent>(index);
        component.targetTag = newTargetTag;
        component.activeRange = newActiveRange;
        AddComponent(index, component);
    }

    public void ReplaceAccelerateTowards(string newTargetTag, float newActiveRange) {
        var index = GameComponentsLookup.AccelerateTowards;
        var component = CreateComponent<AccelerateTowardsComponent>(index);
        component.targetTag = newTargetTag;
        component.activeRange = newActiveRange;
        ReplaceComponent(index, component);
    }

    public void RemoveAccelerateTowards() {
        RemoveComponent(GameComponentsLookup.AccelerateTowards);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAccelerateTowards;

    public static Entitas.IMatcher<GameEntity> AccelerateTowards {
        get {
            if(_matcherAccelerateTowards == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AccelerateTowards);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAccelerateTowards = matcher;
            }

            return _matcherAccelerateTowards;
        }
    }
}
